.checkbox {
  --chkbg: var(--fallback-n,oklch(var(--n)/1));
  --chkfg: var(--fallback-nc,oklch(var(--nc)/1));
  position: relative;
  width: 1.5rem;
  height: 1.5rem;
  cursor: pointer;
  appearance: none;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1.5px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

  .checkbox:focus {
    box-shadow: none;
  }

  .checkbox:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
  outline-color: var(--fallback-n,oklch(var(--n)/0.3));
}

  .checkbox:checked,
  .checkbox[checked="true"],
  .checkbox[aria-checked="true"] {
  background-repeat: no-repeat;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    border-color: var(--chkbg);
    animation: checkmark var(--animation-input, 0.2s) ease-out;
    background-color: var(--chkbg);
    background-image: linear-gradient(-45deg, transparent 66%, var(--chkbg) 66.99%),
      linear-gradient(45deg, transparent 77%, var(--chkbg) 77.99%),
      linear-gradient(-45deg, var(--chkbg) 41%, transparent 41.99%),
      linear-gradient(45deg, var(--chkbg) 34%, var(--chkfg) 34.99%, var(--chkfg) 40%, transparent 40.99%),
      linear-gradient(-45deg, var(--chkfg) 47%, var(--chkbg) 47.99%);
}

  .checkbox:indeterminate {
  background-repeat: no-repeat;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    background-color: var(--chkbg);
    border-color: var(--chkbg);
    animation: checkmark var(--animation-input, 0.2s) ease-out;
    background-image: linear-gradient(90deg, transparent 80%, var(--chkbg) 80%),
      linear-gradient(-90deg, transparent 80%, var(--chkbg) 80%),
      linear-gradient(0deg, var(--chkbg) 45%, var(--chkfg) 45%, var(--chkfg) 55%, var(--chkbg) 55%);
}

  .checkbox-primary {
    --chkbg: var(--fallback-p,oklch(var(--p)/1));
    --chkfg: var(--fallback-pc,oklch(var(--pc)/1));
  }

  .checkbox-primary:checked:focus-visible, .checkbox-primary[checked="true"]:focus-visible, .checkbox-primary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
}

  .checkbox-secondary {
    --chkbg: var(--fallback-s,oklch(var(--s)/1));
    --chkfg: var(--fallback-sc,oklch(var(--sc)/1));
  }

  .checkbox-secondary:checked:focus-visible, .checkbox-secondary[checked="true"]:focus-visible, .checkbox-secondary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-s,oklch(var(--s)/0.3));
}

  .checkbox-accent {
    --chkbg: var(--fallback-a,oklch(var(--a)/1));
    --chkfg: var(--fallback-ac,oklch(var(--ac)/1));
  }

  .checkbox-accent:checked:focus-visible, .checkbox-accent[checked="true"]:focus-visible, .checkbox-accent[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-a,oklch(var(--a)/0.3));
}

  /* State color */

  .checkbox-info {
    --chkbg: var(--fallback-in,oklch(var(--in)/1));
    --chkfg: var(--fallback-inc,oklch(var(--inc)/1));
  }

  .checkbox-info:checked:focus-visible, .checkbox-info[checked="true"]:focus-visible, .checkbox-info[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-in,oklch(var(--in)/0.3));
}

  .checkbox-success {
    --chkbg: var(--fallback-su,oklch(var(--su)/1));
    --chkfg: var(--fallback-suc,oklch(var(--suc)/1));
  }

  .checkbox-success:checked:focus-visible, .checkbox-success[checked="true"]:focus-visible, .checkbox-success[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3));
}

  .checkbox-warning {
    --chkbg: var(--fallback-wa,oklch(var(--wa)/1));
    --chkfg: var(--fallback-wac,oklch(var(--wac)/1));
  }

  .checkbox-warning:checked:focus-visible, .checkbox-warning[checked="true"]:focus-visible, .checkbox-warning[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.3));
}

  .checkbox-error {
    --chkbg: var(--fallback-er,oklch(var(--er)/1));
    --chkfg: var(--fallback-erc,oklch(var(--erc)/1));
  }

  .checkbox-error:checked:focus-visible, .checkbox-error[checked="true"]:focus-visible, .checkbox-error[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3));
}

  .checkbox.disabled,
  .checkbox:disabled,
  .checkbox[disabled] {
  pointer-events: none;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  opacity: 0.4;
}

  .checkbox.disabled:not(checked), .checkbox:disabled:not(checked), .checkbox[disabled]:not(checked) {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity, 1)));
}

@keyframes checkmark {
  0% {
    background-position-y: 5px;
  }
  50% {
    background-position-y: -2px;
  }
  100% {
    background-position-y: 0;
  }
}

/* Backward compatibility */

.checkbox-mark {
  display: none;
}

/* State style */

.checkbox.is-valid,
.validate .checkbox:valid {
  --chkbg: var(--fallback-su,oklch(var(--su)/1));
  --chkfg: var(--fallback-suc,oklch(var(--suc)/1));
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.checkbox.is-valid:focus-visible, .validate .checkbox:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}

.checkbox.is-invalid,
.validate .checkbox:invalid {
  --chkbg: var(--fallback-er,oklch(var(--er)/1));
  --chkfg: var(--fallback-erc,oklch(var(--erc)/1));
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.checkbox.is-invalid:focus-visible, .validate .checkbox:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}

/* Label state */

/* Top text */

.validate .label:has(+ * .checkbox:valid) > *, 
.validate .label-text:has(+ * .checkbox:valid), 
.validate .label-text:has(~ .checkbox:valid), 
.validate .label:has(~ .checkbox:valid) > *, 

.validate .checkbox:valid ~ .label, 
.validate .checkbox:valid ~ .label-text, 
.validate .checkbox:valid ~ .label .label-text,  
.validate *:has(.checkbox:valid) ~ .label, 
.validate *:has(.checkbox:valid) ~ .label-text, 
.validate *:has(.checkbox:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

/* Invalid text style */

/* Top text */

.validate .label:has(+ * .checkbox:invalid) > *, 
.validate .label-text:has(+ * .checkbox:invalid), 
.validate .label-text:has(~ .checkbox:invalid), 
.validate .label:has(~ .checkbox:invalid) > *, 

.validate .checkbox:invalid ~ .label, 
.validate .checkbox:invalid ~ .label-text, 
.validate .checkbox:invalid ~ .label .label-text,  
.validate *:has(.checkbox:invalid) ~ .label, 
.validate *:has(.checkbox:invalid) ~ .label-text, 
.validate *:has(.checkbox:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

/* Helper text */

/* Valid message display */

.validate *:has(> .checkbox:valid) ~ .success-message,
.validate *:has(> .checkbox:valid) > * > .success-message,

.validate .checkbox:valid ~ .success-message,
.validate .checkbox:valid + * > .success-message {
  display: block;
}

.validate *:has(> .checkbox:invalid) ~ .error-message,
.validate *:has(> .checkbox:invalid) > * > .error-message,

.validate .checkbox:invalid ~ .error-message,
.validate .checkbox:invalid + * > .error-message {
  display: block;
}
